{
    "openapi": "3.0.2",
    "info": {
        "title": "Jailbase",
        "version": "1.0.0",
        "description": ""
    },
    "servers": [
        {
            "url": "https://localhost:6661/",
            "description": ""
        }
    ],
    "paths": {
        "/criminals/{criminalsId}": {
            "summary": "Path used to manage a single criminal.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `criminals`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "tags": [
                    "/criminals"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/criminals"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `criminals`."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "404": {
                                        "value": {
                                            "error": "Criminal not found"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Criminal not found"
                    }
                },
                "security": [
                    {}
                ],
                "operationId": "getcriminal",
                "summary": "Get a criminal",
                "description": "Gets the details of a single instance of a `criminals`."
            },
            "delete": {
                "tags": [
                    "/criminals"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                },
                                "examples": {
                                    "200": {
                                        "value": {
                                            "message": "Deleted criminal successfully"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "401": {
                                        "value": {
                                            "error": "Invalid ID"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid ID"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "401": {
                                        "value": {
                                            "error": "You need to log in"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "404": {
                                        "value": {
                                            "error": "Criminal not found"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Criminal not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "operationId": "deletecriminal",
                "summary": "Delete a criminal",
                "description": "Deletes an existing `criminal`."
            },
            "patch": {
                "requestBody": {
                    "description": "Edits criminal",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/criminals"
                            },
                            "examples": {
                                "Criminal edit": {
                                    "value": {
                                        "name": "Jeffery Dahmer",
                                        "crime": "Serial killer",
                                        "dob": "1966-02-17",
                                        "desc": "One of the most famous serial killers"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "/criminals"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                },
                                "examples": {
                                    "200": {
                                        "value": {
                                            "message": "Criminal edited successfully"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Edited successfully"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "400": {
                                        "value": {
                                            "error": "Invalid ID"
                                        }
                                    },
                                    "400-2": {
                                        "value": {
                                            "error": "One or all params are missing"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "401": {
                                        "value": {
                                            "error": "You are not logged in"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Criminal not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "operationId": "editcriminal",
                "summary": "Update a criminal",
                "description": "Updates an existing `criminal`."
            },
            "parameters": [
                {
                    "name": "criminalsId",
                    "description": "A unique identifier for a `criminal`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/criminals": {
            "summary": "Path used to manage the list of criminals.",
            "description": "The REST endpoint/path used to list and create zero or more `criminals` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "tags": [
                    "/criminals"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/criminals"
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `criminals` entities."
                    }
                },
                "security": [
                    {}
                ],
                "operationId": "getcriminals",
                "summary": "List All criminals",
                "description": "Gets a list of all `criminals` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `criminals` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/criminals"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "/criminals"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                },
                                "examples": {
                                    "201": {
                                        "value": {
                                            "message": "Added successfully"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "400": {
                                        "value": {
                                            "error": "One or all params are missing"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "One or all params are missing"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "401": {
                                        "value": {
                                            "error": "You have to login"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "operationId": "createcriminals",
                "summary": "Create a criminal",
                "description": "Creates a new instance of a `criminals`."
            }
        },
        "/sessions": {
            "summary": "Path used to manage the list of sessions.",
            "description": "The REST endpoint/path used to list and create zero or more `sessions` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "/sessions"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sessionResponse"
                                },
                                "examples": {
                                    "201": {
                                        "value": {
                                            "sessionId": 1234567
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful login"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "400": {
                                        "value": {
                                            "error": "One or all params are missing"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "One or all params are missing"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "404": {
                                        "value": {
                                            "error": "Invalid username or password"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid username or password"
                    }
                },
                "security": [
                    {}
                ],
                "operationId": "createsessions",
                "summary": "Create a session",
                "description": ""
            },
            "delete": {
                "tags": [
                    "/sessions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message"
                                },
                                "examples": {
                                    "200": {
                                        "value": {
                                            "message": "Logged out successfully"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "You have to login": {
                                        "value": {
                                            "error": "You have to login"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "SessionId does not have an user associated with it": {
                                        "value": {
                                            "error": "SessionId does not have an user associated with it"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Session not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a session"
            }
        },
        "/logs": {
            "get": {
                "tags": [
                    "/logs"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/logs"
                                },
                                "examples": {
                                    "200": {
                                        "value": {
                                            "time": "2023/01/18 15:55:39",
                                            "user": "admin",
                                            "eventMethod": "Login",
                                            "eventData": "username: admin",
                                            "ip": "undefined"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `logs` entities."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "401": {
                                        "value": {
                                            "error": "You need to log in"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "operationId": "getlogs",
                "summary": "List logs",
                "description": "Get a list of all `logs`"
            }
        }
    },
    "components": {
        "schemas": {
            "criminals": {
                "title": "Root Type for criminals",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "crime": {
                        "type": "string"
                    },
                    "img_link": {
                        "type": "string"
                    },
                    "dob": {
                        "format": "date",
                        "type": "string"
                    },
                    "long_desc": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 4,
                    "name": "Jeffery Dahmer",
                    "crime": "Serial killer",
                    "img_link": "jeffery-dahmer.jpg",
                    "dob": "1966-02-10",
                    "long_desc": "Known for killing multiple people"
                }
            },
            "sessionRequest": {
                "description": "",
                "type": "object",
                "properties": {
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "username": "admin",
                    "password": "qwerty"
                }
            },
            "sessionResponse": {
                "description": "",
                "required": [
                    "sessionId"
                ],
                "type": "object",
                "properties": {
                    "sessionId": {
                        "format": "int32",
                        "description": "",
                        "type": "integer"
                    }
                },
                "example": {
                    "sessionId": 12345678
                }
            },
            "error": {
                "description": "",
                "type": "object",
                "properties": {
                    "error": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "error": "string"
                }
            },
            "message": {
                "title": "Root Type for message",
                "description": "",
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "message": "Added successfully"
                }
            },
            "logs": {
                "description": "",
                "type": "object",
                "properties": {
                    "time": {
                        "description": "",
                        "type": "string"
                    },
                    "user": {
                        "description": "",
                        "type": "string"
                    },
                    "eventMethod": {
                        "description": "",
                        "type": "string"
                    },
                    "eventData": {
                        "description": "",
                        "type": "string"
                    },
                    "ip": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "time": "some text",
                    "user": "some text",
                    "eventMethod": "some text",
                    "eventData": "some text",
                    "ip": "some text"
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ],
    "definitions": {
        "criminals": {
            "description": "",
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "crime": {
                    "description": "",
                    "type": "string"
                },
                "img_link": {
                    "description": "",
                    "type": "string"
                },
                "dob": {
                    "format": "date",
                    "description": "",
                    "type": "string"
                },
                "long_desc": {
                    "description": "",
                    "type": "string"
                }
            },
            "example": {
                "id": 4,
                "name": "Jeffery Dahmer",
                "crime": "Serial killer",
                "img_link": "jeffery-dahmer.jpg",
                "dob": "1966-02-10",
                "long_desc": "Known for killing multiple people"
            }
        }
    }
}